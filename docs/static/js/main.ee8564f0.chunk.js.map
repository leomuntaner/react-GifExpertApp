{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","title","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","propTypes","PropTypes","func","isRequired","ReactDOM","render","document","getElementById"],"mappings":"oMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBAAOO,KAAK,OAAOC,SAhBD,SAACN,GACvBF,EAAcE,EAAEO,OAAOC,QAe+BA,MAAQX,O,+CCrBrDY,EAAO,uCAAE,WAAQC,GAAR,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAKD,EAAIC,GACTT,IAAKQ,EAAIE,OAAOC,iBAAiBX,IACjCY,MAAOJ,EAAII,UATD,kBAaXN,GAbW,4CAAF,sDCCXO,EAAc,SAAC,GAAsB,IAAnBD,EAAkB,EAAlBA,MAAOZ,EAAW,EAAXA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBACIC,IAAMf,EACNgB,IAAMJ,IAEV,kCAAMA,EAAN,WCLCK,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAdAC,qBAAY,WAERxB,EAASC,GACJwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAAEpB,IAEEqB,EDlB0BK,CAAc1B,GAAlCY,EAFwB,EAE7BL,KAAaa,EAFgB,EAEhBA,QAErB,OAEI,qCACA,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,kCAAb,uBAEb,qBAAKA,UAAU,YAAf,SAEQJ,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfpBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACC,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GACd,OAAO,cAAC,EAAD,CACGA,SAAWA,GACJA,YAWnChB,EAAY6C,UAAY,CACpB5C,cAAe6C,IAAUC,KAAKC,Y,MC1BlCC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.ee8564f0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');  \r\n        }\r\n    };\r\n\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <input type='text' onChange={ handleInputChange } value={ inputValue } />\r\n        </form>\r\n    )\r\n}\r\n","\r\n    export const getGifs= async ( category ) =>{\r\n        const url= `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=bFlKkbPYupYFsrjEcKuMwzHkNZ4mahmP`;\r\n        const resp= await fetch( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return{\r\n                id : img.id ,\r\n                url: img.images.downsized_medium.url,\r\n                title: img.title\r\n            }\r\n        }) \r\n\r\n        return gifs;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img \r\n                src={ url } \r\n                alt={ title } \r\n            />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    // CUSTOM HOOK\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn' > {category} </h3>\r\n\r\n        { loading && <p className='animate__animated animate_flash'>Loading..</p> }\r\n\r\n        <div className='card-grid'>\r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img} />\r\n                    ))\r\n                }                \r\n            </div> \r\n        </>        \r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    \r\n    });\r\n    \r\n    useEffect ( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n            });\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n\r\n}\r\n","import React,{ useState } from 'react'\r\nimport { AddCategory} from './components/AddCategory';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n     <>        \r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <hr/> \r\n        <ol>\r\n            {\r\n                categories.map( category =>{\r\n                  return <GifGrid \r\n                            category={ category }\r\n                            key= { category }    \r\n                         />\r\n                })\r\n            }\r\n        </ol>\r\n\r\n     </>\r\n    )\r\n\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}